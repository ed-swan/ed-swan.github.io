<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta http-equiv="Content-Language" content="en-us">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=ISO8859">
<title>CSE 8433 Syllabus</title>
<link rel="stylesheet" type="text/css" href="screen_styles.css" media="screen">
</head>

<body lang="en">

<h1>CSE 8433 Advanced Computer Graphics Syllabus</h1>
<dl>
  <dt>Instructor</dt>
  <dd>Dr. J. Edward Swan II</dd>
  <dt>Course Time and Location</dt>
  <dd>Mon and Wed, 2:00 pm–3:15 pm, 104
  <a href="http://msuinfo.ur.msstate.edu/where/building/butler.htm">Butler Hall</a></dd>
  <dt>Office Hours and Location</dt>
  <dd>Tue and Thurs, 2:00 pm–3:30 pm, 321
  <a href="http://msuinfo.ur.msstate.edu/where/building/butler.htm">Butler Hall</a></dd>
  <dt>Mailing List</dt>
  <dd><a href="mailto:cse8433-01.spring2005@courses.msstate.edu">
  cse8433-01.spring2005@courses.msstate.edu</a><br>
  I will also post all announcements to the course message boards.</dd>
  <dt>Prerequisite Course</dt>
  <dd>CSE 4413 / 6413 or equivalent</dd>
  <dt>Required Text</dt>
  <dd>Donald Hearn and M. Pauline Baker, <span class="book">
  <a href="http://vig.prenhall.com:8081/catalog/academic/product/0,4096,0130153907,00.html">
  Computer Graphics with OpenGL</a></span>, 3rd ed., Pearson/Prentice Hall, 
  2003.&nbsp; </dd>
  <dt>Recommended Text</dt>
  <dd>Peter Shirley, <a href="http://www.cs.utah.edu/~shirley/fcg/">Fundamentals 
  of Computer Graphics</a>, A. K. Peters, 2002.&nbsp; This book is not required, 
  but it's a good book, and I will be basing some lectures on it.&nbsp; I may 
  assign some readings, but if I do, I will make them available on the course 
  website.</dd>
  <dt>Additional Readings</dt>
  <dd>As the semester progresses, I may assign additional readings from current 
  and classic computer graphics papers and/or additional book chapters.&nbsp; If 
  I do, I will put copies of these papers on the course website.</dd>
  <dt>Catalog Information</dt>
  <dd><span class="fieldmediumtext">Three hours lecture.&nbsp;&nbsp;Realistic, 
  three-dimensional image generation; modeling&nbsp;techniques for complex 
  three-dimensional scenes;&nbsp;&nbsp;advanced illumination techniques; fractal surface 
  modeling;&nbsp;modeling and rendering of natural phenomena.</span></dd>
</dl>
<h1>Grading</h1>
<center>
<table cellspacing="3" cellpadding="2">
  <tr>
    <td>Programming Assignments</td>
    <td>50%</td>
  </tr>
  <tr>
    <td>Homework Assignments</td>
    <td>**</td>
  </tr>
  <tr>
    <td>Midterm Exam</td>
    <td>15%</td>
  </tr>
  <tr>
    <td>Final Project / Exam</td>
    <td>35%</td>
  </tr>
</table>
</center>
<p>**I may assign homework assignments during the semester if it seems that they 
will be useful.&nbsp; If this happens, I will adjust the grading scale to give 
the homework assignments a weight of 5% to 10%; this weight will come from the 
Final Project / Exam.&nbsp; </p>
<p>Each programming assignment (and homework assignment, if we have them) will 
be equally weighed.&nbsp; </p>
<p>Because my goal is for this course to be a collaborative environment, I will 
not grade the course on a curve, and thus students are not competing against 
each other.&nbsp; The grading scale is:</p>
<center>
<table cellspacing="3" cellpadding="2">
  <tr>
    <td>&#8805; 90%</td>
    <td>A</td>
  </tr>
  <tr>
    <td>80%–89%</td>
    <td>B</td>
  </tr>
  <tr>
    <td>60%–79%</td>
    <td>C</td>
  </tr>
  <tr>
    <td>50%–59%</td>
    <td>D</td>
  </tr>
  <tr>
    <td>&lt; 50%</td>
    <td>F</td>
  </tr>
</table>
</center>
<p><b>Exams</b>: All exams are closed-notes, closed-book, cumulative exams.</p>
<h1>Policies</h1>
<p><b>Attendance and Audits</b>: Except for exams, attending the lectures is not 
mandatory, but students are responsible for obtaining the course information on 
their own.&nbsp; Attendance will not affect a student's grade.&nbsp; Students 
who audit the class are also not required to attend, but when they do, auditors 
are expected to conform to the same classroom decorum as regular students.</p>
<p><b>Academic Honesty / Misconduct</b>: Students are expected to maintain the 
standards of academic honesty that are described in the
<a href="http://www.cse.msstate.edu/academics/honesty.php">Department of 
Computer Science and Engineering's Academic Honesty Policy</a>.&nbsp; As 
described under the section on <a href="#Programming Assignments">Programming 
Assignments</a> below, I allow a greater degree of collaboration on programming 
assignments than the strictest possible interpretation of the department's 
honesty policy.&nbsp; </p>
<p><b>Personal Electronic Devices</b>: Students must respect their fellow 
students and not disrupt class. Therefore, cell phones, pagers, other such 
alarms, or personal conversations which disturb the lecture are not allowed.&nbsp; 
Students with personal laptops are encouraged to bring them to class; however, 
laptops are not required for this course.</p>
<p><b>Grade of Incomplete (I)</b>: Incomplete grades will only be given in 
extreme circumstances, such as illness, death in a student's immediate family, 
or similar circumstances beyond a student's control.&nbsp; </p>
<p><b>Drop / Add Policy</b>: This class follows
<a href="http://www.cse.msstate.edu/academics/add_drop.php">Mississippi State 
University's Official Drop/Add Policy</a>:</p>
<blockquote>
  <p><b>Add/drop without penalty</b>: A student has through the fifth class day 
  into the semester to add a course and through the tenth class day to drop a 
  course without being assessed a fee or academic penalty. </p>
  <p><b>Drop after the tenth class day through the 30th class day into the 
  semester</b>: A student who elects to drop a course during this period must 
  receive the approval of his/her advisor, will be assigned a W on his/her 
  academic record, and be assessed a fee. The advisor who permits the drop will 
  specify its effective date.</p>
  <p><b>Drop after the 30th class day into the semester</b>: A student cannot 
  drop courses after this period except in documented cases of serious illness, 
  extreme hardship, or failure of the instructor to provide significant 
  assessment of his/her performance. A request to drop a course during this 
  period must be approved by the student's advisor and academic dean. The dean 
  who permits the drop will specify its effective date. A student receiving 
  permission to drop will receive a W on his/her academic record and be assessed 
  a fee. </p>
  <p>Faculty are expected to provide a student with significant evidence or 
  assessment of his/her class performance within the first six weeks. </p>
</blockquote>
<h1>Message Boards and Email</h1>
<p>In this class, the WebCT message boards are the main communication interface 
the instructor and your fellow students. Do not send email to the instructor 
with questions about the assignments; post these to the discussion boards 
instead. Often, other students may be able to answer your question before the 
instructor.&nbsp; My goal is for the course to build upon a collaborative 
environment.</p>
<p>Since there may be frequent list activity, check the boards at least once a 
day. Students are responsible for knowing any material posted by the instructor.</p>
<p>The boards are a forum for discussion related to this class. Therefore, do 
not post rude or irrelevant messages. In addition, while algorithms and 
approaches in general can be discussed on the assignment, exact or partial 
solutions (including code detailed snippets) are not allowed. Everyone is to do 
their own work.</p>
<h1><a name="Programming Assignments">Programming Assignments</a></h1>
<p>Programming assignments will make up the bulk of the learning and the work in 
this class.&nbsp; I can't stress enough how important the programming 
assignments are for learning computer graphics.</p>
<h2>Machines, Languages, and Compilers</h2>
<p>Students may use their own machines, or the machines in Butler 213.&nbsp; 
These machines are accessible to any student in the course, and have the 
reference compilers and libraries listed below installed on the Windows and 
Linux partitions.</p>
<p>Students may use either C++ or Python for the assignments.&nbsp; In general, 
I recommend C++ for the assignments that involve rendering, but I have no 
particular recommendation for the assignments that involve interaction.</p>
<p>Students may use any compiler they desire to develop and debug the lab 
assignments.&nbsp; However, when it is time to turn the assignments in, 
students' code must compile and link with one of the following reference 
compilers and libraries.&nbsp; If the code doesn't compile and execute with the 
reference compilers and libraries, it won't be graded.&nbsp; </p>
<dl>
  <dt>C++:</dt>
  <dd>The reference compiler is GNU g++ version 3.3.3.&nbsp; This is generally 
  the default compiler for Linux machines.&nbsp; For a Windows machine, the 
  easiest way to get g++ is by installing <a href="http://www.cygwin.com/">
  Cygwin</a>.&nbsp; </dd>
  <dt>Python:</dt>
  <dd>The reference compiler and libraries are the same as was required for CSE 
  4413 / 6413: <a href="http://python.org/2.3/" title="Python 2.3">Python 2.3</a>,
  <a href="http://www.pythonware.com/products/pil/" title="PIL 1.1.4">the Python 
  Imaging Library 1.1.4</a>, and
  <a href="http://pyopengl.sf.net/" title="PyOpenGL 2.0.1.08">PyOpenGL 2.0.1.08</a>.&nbsp; 
  No other libraries will be assumed.</dd>
</dl>
<h2><span style="font-weight: bold;">Collaboration</span></h2>
<p>Real world programmers work in groups.&nbsp; I encourage students to 
collaborate on programming assignments in terms of <i>discussing algorithms</i> 
and <i>general approaches</i>.&nbsp; Students may also assist each other in <i>
program debugging</i>. Students may engage in these activities through the 
message boards.&nbsp; </p>
<p>However, <i>the code for each assignment must be written individually by each 
student</i>. This means do not use source code downloaded off the Internet or 
accessed by other means, and don't use outside libraries except for the ones 
that I provide.&nbsp; This is an important policy.&nbsp; Not only will violators 
fail to learn the course material, but violators of this policy will be handled 
according to <a href="http://www.msstate.edu/dept/audit/1207.html">Mississippi 
State's Academic Honesty Policy 12.07</a>. </p>
<h2>Programming Assignment Grading</h2>
<ul>
  <li>Program assignments will be submitted electronically through the WebCT 
  interface.&nbsp; In general, programs will be due by 11:59 pm on the indicated 
  date.</li>
  <li>Late programs will be penalized by 10% for each 24-hour period after their 
  due date, including Saturday and Sunday.</li>
  <li>In order for maximum learning to occur, programs should work completely.&nbsp; 
  If it doesn't work, turn it in late, but keep working on it.</li>
  <li>As discussed above, if a program doesn't compile with the reference 
  compiler and libraries, it won't be graded, and the student will loose the 
  vast majority of possible credit for the assignment.</li>
</ul>
<p>Programs will be graded on the following criteria:</p>
<ul>
  <li><b>Results</b>: Does the program do what it is supposed to do?</li>
  <li><b>Documentation and Program Structure</b>: Does the code contain a 
  sufficient quantity of meaningful comments and meaningful variable names?&nbsp; 
  Is it well structured and modular?</li>
  <li><b>Demonstration of Knowledge</b>: Does the code demonstrate that the 
  student understands the assignment?</li>
</ul>
<address>
  Last modified: Feb 3, 2005</address>

</body>

</html>
