@COMMENT This file was generated by bib2html.pl <https://sourceforge.net/projects/bib2html/> version 0.94
@COMMENT written by Patrick Riley <http://sourceforge.net/users/patstg/>
@InCollection{VDA02-lods, 
  author =      {J. Edward {Swan~II} and Jesus Arango and Bala Nakshatrala}, 
  title =       {Interactive, Distributed, Hardware-Accelerated LOD-Sprite 
                 Terrain Rendering with Stable Frame Rates}, 
  booktitle =   {Visualization and Data Analysis 2002, Proceedings of SPIE Volume 4665}, 
  editor =      {R. Erbacher and P. Chen and M. Gr\"{o}hn and J. Roberts and 
                 C. Wittenbrink}, 
  month =       {January}, 
  year =        2002, 
  pages =       {177--188}, 
  abstract =    { 
A stable frame rate is important for interactive rendering systems. 
Image-based modeling and rendering (IBMR) techniques, which model 
parts of the scene with image sprites, are a promising technique for 
interactive systems because they allow the sprite to be manipulated 
instead of the underlying scene geometry.  However, with IBMR 
techniques a frequent problem is an unstable frame rate, because 
generating an image sprite (with 3D rendering) is time-consuming 
relative to manipulating the sprite (with 2D image resampling).  This 
paper describes one solution to this problem, by distributing an IBMR 
technique into a collection of cooperating threads and executable 
programs across two computers. 
The particular IBMR technique distributed here is the LOD-Sprite 
algorithm.  This technique uses a multiple level-of-detail (LOD) scene 
representation.  It first renders a keyframe from a high-LOD 
representation, and then caches the frame as an image sprite.  It 
renders subsequent spriteframes by texture-mapping the cached image 
sprite into a lower-LOD representation.  We describe a distributed 
architecture and implementation of LOD-Sprite, in the context of 
terrain rendering, which takes advantage of graphics hardware.  We 
present timing results which indicate we have achieved a stable frame 
rate.  In addition to LOD-Sprite, our distribution method holds 
promise for other IBMR techniques. 
}, 
} 
